import '../style/App.css';
import React, { useEffect, useState } from "react";
import { observer } from "mobx-react-lite";
import APIService from "../components/ApiService";
import { Button } from "react-bootstrap";
import { Tabs, Tab } from "react-bootstrap";
import Form from 'react-bootstrap/Form';

import FileSaver from "file-saver";



const Tables = observer(() => {
    const [godless, setnameofgod] = useState();
    const [tableIDforEdit, settableIDforEdit] = useState();
    const [tableIDforDelete, settableIDforDelete] = useState();
    const [statementID, setStatementID] = useState();
    const [table, settable] = useState();
    const [buttonForSendGodAndGetFileState, setButtonForSendGodAndGetFileState] = useState(false)
    const [form, setform] = useState();
    const [searchtab, setsearchtab] = useState();
    const [formForEdit, setformForEdit] = useState();


    const [key, setKey] = useState('home');

    useEffect(() => {
        clickForGetFormUI()
        clickForGetSearchTab()
    }, []);

    useEffect(() => {
        const getActiveTab = JSON.parse(localStorage.getItem("activeTab"));
        if (getActiveTab) {
            setKey(getActiveTab);
        }
    }, []);

    useEffect(() => {
        localStorage.setItem("activeTab", JSON.stringify(key));
    }, [key]);


    const clickForSendGodAndGetFile = async () => {
        setStatementID("wait...");
        try {
            setButtonForSendGodAndGetFileState(true);
            let zxc = await APIService.SendID({ "number_statement": godless });
            FileSaver.saveAs(zxc)
            await setStatementID(godless);
            setButtonForSendGodAndGetFileState(false);
        }
        catch (e) {
            setButtonForSendGodAndGetFileState(false);
            setStatementID("–û–®–ò–ë–ö–ê");
            console.log(e)
        }
    };

    const clickForGetTable = async () => {
        settable("wait...");
        try {
            let zxc = await APIService.GetTable(godless);
            console.log(zxc)
            await settable(zxc);
        }
        catch (e) {
            settable("–û–®–ò–ë–ö–ê ");
            console.log(e)
        }
    };
    const clickForGetSearchTab = async () => {

        setform("wait...");
        try {
            let zxc = await APIService.GetTableHeader();
            await setsearchtab(zxc);
        }
        catch (e) {
            setsearchtab("–û–®–ò–ë–ö–ê ");
            console.log(e)
        }
    };

    const clickForGetFormUI = async () => {

        setform("wait...");
        try {
            let zxc = await APIService.GetUIInputForm();
            await setform(zxc);
        }
        catch (e) {
            setform("–û–®–ò–ë–ö–ê ");
            console.log(e)
        }
    };
    const clickForGetFormForEditUI = async () => {

        setformForEdit("wait...");
        try {
            let zxc = await APIService.GetUIInputFormForEdit({statement_id:tableIDforEdit});
            await setformForEdit(zxc);
        }
        catch (e) {
            setformForEdit("–û–®–ò–ë–ö–ê ");
            console.log(e)
        }
    };
    const clickForDeleteRow = async () => {

        try {
            await APIService.SendIDforDelete({statement_id:tableIDforDelete});
        }
        catch (e) {
            console.log(e)
        }
    };


    return (
        <Tabs
            id="fill-tab-example"
            className="Tabs-app"
            activeKey={key}
            onSelect={(k) => setKey(k)}
            fill
        >
            <Tab eventKey="home" title="–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è">
                <div className="App">
                    <header className="App-header">
                        <h1>–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</h1>
                        <div className="card-block">
                            <h2>üòá–¢—É—Ç –≤—Å—ë –¥–æ–≤–æ–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æüòá</h2>
                            <dl>
                                <dt>–í–∫–ª–∞–¥–∫–∞ "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"</dt>
                                <dd>–≠–º–º–º–º –Ω—É—É—É—É –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å –∫—Ä—á –∞–∞–∞–∞ –¥–∞</dd>
                                <dt>–í–∫–ª–∞–¥–∫–∞ "–ü–æ–ª—É—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É"</dt>
                                <dd>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –≤—ã–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ</dd>
                                <dt>–í–∫–ª–∞–¥–∫–∞ "–ü–æ–∏—Å–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ"</dt>
                                <dd>–ù–∞ —ç—Ç–æ–π –≤–∫–ª–∞–¥–∫–µ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å—Ç–æ–ª–±–µ—Ü –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤</dd>
                                <dt>–í–∫–ª–∞–¥–∫–∞ "–û—Ç–ø—Ä–∞–≤–∫–∞"</dt>
                                <dd>–ó–∞–ø–æ–ª–Ω–∏–≤ —Ñ–æ—Ä–º—É –Ω–∞ —ç—Ç–æ–π –≤–∫–ª–∞–¥–∫–µ, –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—ë –∫–∞–∫ —Å—Ç—Ä–æ–∫—É –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö</dd>
                                <dt>–í–∫–ª–∞–¥–∫–∞ "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã"</dt>
                                <dd>–ù–∞ –¥–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ –∂–µ —É–¥–∞–ª–∏—Ç—å –µ—ë</dd>
                                <dt>–ö—Å—Ç–∞—Ç–∏</dt>
                                <dd>–ï—Å–ª–∏ –í–∞—Å –≤—Å—Ç—Ä–µ—á–∞—é—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏, —Ç–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</dd>
                                <dd>–õ–∏–±–æ —Å–ª–µ—Ç–µ–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –ª–∏–±–æ –ø—Ä–æ–±–ª–µ–º—ã —Å api mmis</dd>
                            </dl>
                        </div>
                    </header>
                </div>
            </Tab>
            <Tab eventKey="get" title="–ü–æ–ª—É—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É">
                <div className="App">
                    <header className="App-header">
                        <div className="card-block">
                            <h1> –í—ã–±—Ä–∞–Ω –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏: {statementID}</h1>
                            <div class="form-example">
                                <Form.Control size="lg" type="text" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞:" onChange={(e) => setnameofgod(e.target.value)} />
                                <Button name="buttonForSendGodAndGetFile" disabled={buttonForSendGodAndGetFileState} type="submit" variant="light" onClick={event => clickForSendGodAndGetFile()} >–ü–æ–ª—É—á–∏—Ç—å –¥–æ–≥–æ–≤–æ—Ä</Button>
                            </div>
                        </div>

                        <div className="card-block">
                            <div className="getTable">
                                <h1>–¢–ê–ë–õ–ò–¶–ê </h1>
                                <div class="form-example">
                                    <Button type="submit" variant="light" onClick={event => clickForGetTable()}>–ü–æ–ª—É—á–∏—Ç—å(–û–±–Ω–æ–≤–∏—Ç—å) —Ç–∞–±–ª–∏—Ü—É</Button>
                                </div>
                                {table}
                            </div>

                        </div>
                        <br />
                    </header>

                </div>
            </Tab>
            <Tab eventKey="search" title="–ü–æ–∏—Å–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ">
                <div className="App">
                    {searchtab}
                </div>
            </Tab>
            <Tab eventKey="send" title="–û—Ç–ø—Ä–∞–≤–∫–∞">

                <div className="App">
                    <header className="App-header">
                        <div className="card-block">
                            <div className="getTable">
                                <h1>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏</h1>
                            </div>
                            <div class="form-example">
                                {form}
                            </div>
                        </div>
                    </header>
                </div>
            </Tab>
            <Tab eventKey="update" title="–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã">

                <div className="App">
                    <header className="App-header">
                        <div className="card-block">
                            <div className="getTable">
                                <h1>–§–æ—Ä–º–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è</h1>
                            </div>
                            <div class="form-example">
                                –í—ã–±–æ—Ä –∏–Ω–¥–µ–∫—Å–∞:
                                <Form.Control size="lg" type="text" placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏ –≤ –±–∞–∑–µ:" onChange={(e) => settableIDforEdit(e.target.value)} />
                                <Button type="submit" variant="light" onClick={event => clickForGetFormForEditUI()} >–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</Button>
                            </div>
                            {formForEdit}
                        </div>
                        <div className="card-block">
                            
                            <div className="getTable">
                                <h1>–£–¥–∞–ª–µ–Ω–∏–µ</h1>
                            </div>
                            <div class="form-example">
                            –í—ã–±–æ—Ä –∏–Ω–¥–µ–∫—Å–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:
                                <Form.Control size="lg" type="text" placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏ –≤ –±–∞–∑–µ:" onChange={(e) => settableIDforDelete(e.target.value)} />
                                <Button type="submit" variant="light" onClick={event => clickForDeleteRow()} >–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</Button>
                            </div>
                            
                        </div>
                    </header>
                </div>
            </Tab>
        </Tabs>

    );
});



export default Tables;